{"version":3,"file":"beep-message-list.js","sourceRoot":"","sources":["src/beep-message-list.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAChD,OAAO,mBAAmB,CAAC;AAC3B,OAAO,EAAC,IAAI,EAAC,MAAM,WAAW,CAAC;AAU/B,MAAM,QAAQ,GAAe;IAC3B;QACE,OAAO,EAAG,mBAAmB;QAC7B,MAAM,EAAG,OAAO;QAChB,IAAI,EAAG,0BAA0B;QACjC,KAAK,EAAG,KAAK;QACb,KAAK,EAAG,KAAK;KAAE;IACjB;QACE,OAAO,EAAC,0CAA0C;QAClD,MAAM,EAAG,WAAW;QACpB,IAAI,EAAG,0BAA0B;QACjC,KAAK,EAAG,CAAC;QACT,KAAK,EAAC,IAAI;KACX;IACD;QACE,OAAO,EAAC,SAAS;QACjB,MAAM,EAAC,YAAY;QACnB,IAAI,EAAC,0BAA0B;QAC/B,KAAK,EAAG,SAAS;QACjB,KAAK,EAAC,IAAI;KACX;IACD;QACE,OAAO,EAAC,SAAS;QACjB,MAAM,EAAC,YAAY;QACnB,IAAI,EAAC,0BAA0B;QAC/B,KAAK,EAAG,SAAS;QACjB,KAAK,EAAC,IAAI;KACX;IACD;QACE,OAAO,EAAC,eAAe;QACvB,MAAM,EAAC,iBAAiB;QACxB,IAAI,EAAC,0BAA0B;QAC/B,KAAK,EAAG,CAAC;QACT,KAAK,EAAC,KAAK;KACZ;IACD;QACE,OAAO,EAAC,oBAAoB;QAC5B,MAAM,EAAC,eAAe;QACtB,IAAI,EAAC,6BAA6B;QAClC,KAAK,EAAG,CAAC;QACT,KAAK,EAAC,KAAK;KACZ;CACF,CAAA;AAGM,IAAM,eAAe,GAArB,MAAM,eAAgB,SAAQ,UAAU;IAAxC;;QAGL,kBAAa,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;YAC7B,IAAI,EAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC;YACnB,IAAI,EAAE,GAAG,EAAE;gBACT,OAAO,IAAI,OAAO,CAAY,CAAC,OAAO,EAAC,EAAE;oBACvC,UAAU,CAAC,GAAG,EAAE;wBACd,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAA;IAyBJ,CAAC;IAvBC,uCAAuC;IACrC,EAAE;IACJ,GAAG;IAEH,GAAG;IAEM,MAAM;QACb,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;YACtC,OAAO,EAAG,GAAE,EAAE,CAAA,IAAI,CAAA,4BAA4B;YAC9C,OAAO,EAAG,GAAE,EAAE,CAAA,IAAI,CAAA,wBAAwB;YAC1C,QAAQ,EAAG,CAAC,QAAQ,EAAC,EAAE,CAAA,IAAI,CAAA;UACvB,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAA;;sBAEhB,OAAO,CAAC,OAAO;mBAClB,OAAO,CAAC,IAAI;qBACV,OAAO,CAAC,KAAK;oBACd,OAAO,CAAC,KAAK;qBACZ,OAAO,CAAC,MAAM;0BACT,CAChB,EAAE;SACP,CAAC,EAAE,CAAA;IAEN,CAAC;;AAnCe,sBAAM,GAAG,GAAG,CAAA,EAAE,AAAR,CAAS;AADpB,eAAe;IAD3B,aAAa,CAAC,mBAAmB,CAAC;GACtB,eAAe,CAqC3B","sourcesContent":["/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\nimport {LitElement, html, css} from 'lit';\r\nimport {customElement} from 'lit/decorators.js';\r\nimport './beep-message.js';\r\nimport {Task} from '@lit/task';\r\n\r\ntype Message = {\r\n  content: string;\r\n  author:string;\r\n  date : string;\r\n  likes : number;\r\n  liked : boolean;\r\n}\r\n\r\nconst messages : Message[] = [\r\n  {\r\n    content : \"god bless america\",\r\n    author : \"D.J.T\",\r\n    date : \"2020-10-05T14:48:00.000Z\",\r\n    likes : 14000,\r\n    liked : false,},\r\n  {\r\n    content:\"bien d'accord le reuf, je suis Elon Musk\",\r\n    author : \"Elon Musk\",\r\n    date : \"2025-10-05T14:48:00.000Z\",\r\n    likes : 0,\r\n    liked:true,\r\n  },\r\n  {\r\n    content:\"poggers\",\r\n    author:\"rd.chatter\",\r\n    date:\"0130-10-05T14:48:00.000Z\",\r\n    likes : 180000000,\r\n    liked:true,\r\n  },\r\n  {\r\n    content:\"poggers\",\r\n    author:\"rd.chatter\",\r\n    date:\"2011-10-05T14:48:00.000Z\",\r\n    likes : 180000000,\r\n    liked:true,\r\n  },\r\n  {\r\n    content:\"omg wisigoths\",\r\n    author:\"Romulus Auguste\",\r\n    date:\"0476-10-05T14:48:00.000Z\",\r\n    likes : 0,\r\n    liked:false,\r\n  },\r\n  {\r\n    content:\"putain dsl la team\",\r\n    author:\"VersingÃ©torix\",\r\n    date:\"-000051-01-11T23:50:39.000Z\",\r\n    likes : 0,\r\n    liked:false,\r\n  }\r\n]\r\n\r\n@customElement('beep-message-list')\r\nexport class BeepMessageList extends LitElement {\r\n  static override styles = css``;\r\n\r\n  _messagesTask = new Task(this, {\r\n    args:() => [\"test\"],\r\n    task: () =>{\r\n      return new Promise<Message[]>((resolve)=>{\r\n        setTimeout(() => {\r\n          resolve(messages);\r\n        }, 2000);\r\n      });\r\n    }\r\n  })\r\n\r\n  //async _pokemonTask = new Task(this, {\r\n    //\r\n  //}\r\n\r\n  //)\r\n\r\n  override render() {\r\n    return html`${this._messagesTask.render({\r\n      initial : ()=>html`<p>Waiting for resonse</p>`,\r\n      pending : ()=>html`<p>Running task...</p>`,\r\n      complete : (messages)=>html`\r\n        ${messages.map(message => html`\r\n          <beep-message\r\n            content=${message.content}\r\n            date=${message.date}\r\n            ?liked=${message.liked}\r\n            likes=${message.likes}\r\n            author=${message.author}>\r\n          </beep-message>`)\r\n          }`\r\n    })}`\r\n  \r\n  }\r\n}\r\n  \r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'beep-message-list': BeepMessageList;\r\n  }\r\n}\r\n"]}